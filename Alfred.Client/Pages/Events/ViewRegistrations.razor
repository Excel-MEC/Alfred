@page "/Events/{Id:int}/Registrations"
@using Alfred.Client.Dtos.Accounts
@using Alfred.Client.Dtos.Events
@inject IEventRepository EventRepo

<AuthorizedView Role=@($"{Roles.Admin},{Roles.Core},{Roles.Editor},{Roles.Staff}")>
    <div class="row">
        <div class="col-md-12 text-center">
            <h1>@_event?.Name</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <RadzenButton Click="@(async () => await ExportCsv())" Icon="get_app" Text="Download"/>
        </div>
        <div class="col-md-6 text-right mb-2">
            <RadzenButton Click="@(async () => await Refresh())" Icon="cached"/>
        </div>
    </div>
    <RadzenGrid @ref="@_userGrid" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="20"
                 AllowSorting="true" Data="@_registrations" TItem="RegistrationForViewDto">
        <Columns>
            <RadzenGridColumn TItem="RegistrationForViewDto" Property="Id" Title="Id" width="100px"/>
            <RadzenGridColumn TItem="RegistrationForViewDto" Property="ExcelId" Title="ExcelId"/>
            <RadzenGridColumn TItem="RegistrationForViewDto" Property="TeamId" Title="TeamId"/>
            <RadzenGridColumn TItem="RegistrationForViewDto" Property="TeamName" Title="Team Name"/>
            <RadzenGridColumn TItem="RegistrationForViewDto" Property="Name" Title="Name"/>
            <RadzenGridColumn TItem="RegistrationForViewDto" Property="Email" Title="E-mail"/>
            <RadzenGridColumn TItem="RegistrationForViewDto" Property="MobileNumber" Title="Phone"/>
            <RadzenGridColumn TItem="RegistrationForViewDto" Title="View" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                <Template Context="data">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="visibility" Size="ButtonSize.Small" Click="@(args => Dialog.Open<UserCard>(data.Name, new Dictionary<string, object>() {{"User", Mapper.Map<UserForListViewDto>(data)}}, new DialogOptions() {Width = "700px"}))">
                    </RadzenButton>
                </Template>
            </RadzenGridColumn>
        </Columns>
    </RadzenGrid>
    @if (_loading)
    {
        <div class="spinner"></div>
    }
</AuthorizedView>

@code{
    bool _loading = false;

    [Parameter]
    public int Id { get; set; }

    RadzenGrid<RegistrationForViewDto> _userGrid;
    EventForListViewDto _event;

    List<RegistrationForViewDto> _registrations = new List<RegistrationForViewDto>();

    async Task Refresh()
    {
        _loading = true;
        var events = await State.GetEventList();
        _event = events.FirstOrDefault(x => x.Id == Id);
        _registrations = await EventRepo.Registrations(Id);
        _loading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    async Task ExportCsv()
    {
        await Services.ExportExcelAsync(_registrations, $"Event-{Id}-Registrations");
    }

}