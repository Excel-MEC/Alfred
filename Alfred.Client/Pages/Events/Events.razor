@page "/Events"
@using Alfred.Client.Dtos.Events
@inject IEventRepository EventRepo

<AuthorizedView Role=@($"{Roles.Admin},{Roles.Core},{Roles.Editor},{Roles.Staff}")>
    <div class="row">
        <div class="col-md-12 text-right mb-2">
            <a href="/Events/Add">
                <RadzenButton Text="Add Event"/>
            </a>
            <RadzenButton Click="@(async () => await Refresh(true))" Icon="cached" Style="margin-bottom: 20px; width: 80px"/>
        </div>
    </div>
    <RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="8"
                AllowSorting="true" Data="@_events.Where(e => _currentEventType == "All" || _currentEventType == e.EventType).Where(e => _currentCategory == "All" || _currentCategory == e.Category)" TItem="EventForListViewDto">
        <Columns>
            <RadzenGridColumn TItem="EventForListViewDto" Property="Id" Title="Id" width="60px"/>
            <RadzenGridColumn TItem="EventForListViewDto" Property="Name" Title="Name"/>
            <RadzenGridColumn TItem="EventForListViewDto" Property="Icon" Title="Icon" Filterable="false" Sortable="false">
                <Template Context="data">
                    <RadzenImage Path="@data?.Icon" style="max-height: 80px"/>
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="EventForListViewDto" Property="EventType" Title="Event Type">
                <FilterTemplate>
                    <RadzenDropDown @bind-Value="@_currentEventType" TextProperty="Text" ValueProperty="Value" Style="width:100%" Data="@_eventType"/>
                </FilterTemplate>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="EventForListViewDto" Property="Category" Title="Category">
                <FilterTemplate>
                    <RadzenDropDown @bind-Value="@_currentCategory" TextProperty="Text" ValueProperty="Value" Style="width:100%" Data="@_category"/>
                </FilterTemplate>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="EventForListViewDto" Property="NeedRegistration" Title="Need Registration"/>
            <RadzenGridColumn TItem="EventForListViewDto" Property="Day" Title="Day"/>
            <RadzenGridColumn TItem="EventForListViewDto" Property="Datetime" Title="DateTime" Filterable="false" Sortable="false">
                    <Template Context="data">
                        @data.Datetime.ToString("dd-MM-yyyy hh:mm tt")
                    </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="EventForListViewDto" Context="data" Title="View" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                <Template Context="data">
                    <a href=@($"/Events/{data.Id}")>
                        <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="visibility" Size="ButtonSize.Small"/>
                    </a>
                </Template>
            </RadzenGridColumn>
            <RadzenGridColumn TItem="EventForListViewDto" Context="data" Title="Edit" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                <Template Context="data">
                    <a href=@($"/Events/Edit/{data.Id}")>
                        <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="edit" Size="ButtonSize.Small"/>
                    </a>
                </Template>
            </RadzenGridColumn>
            <RestrictedView Role=@($"{Roles.Admin},{Roles.Editor}")>
                <RadzenGridColumn TItem="EventForListViewDto" Title="Delete" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
                    <Template Context="data">
                        <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="close" Size="ButtonSize.Small" Click="@(async highlight => await ShowConfirmDialogue(data))">
                        </RadzenButton>
                    </Template>
                </RadzenGridColumn>
            </RestrictedView>
        </Columns>
    </RadzenGrid>
    @if (_loading)
    {
        <div class="spinner"></div>
    }
</AuthorizedView>

@code {
    List<EventForListViewDto> _events = new List<EventForListViewDto>();
    string _currentEventType;
    string _currentCategory;
    Constants _constants = new Constants();
    List<string> _eventType = new List<string>();
    List<string> _category = new List<string>();
    bool _loading;

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _events = await State.GetEventList();
        _constants = await State.GetConstants();
        _eventType = _constants.EventType.Select(x => x).ToList();
        _category = _constants.Category.Select(x => x).ToList();

        _eventType.Add("All");
        _category.Add("All");
        _currentEventType = "All";
        _currentCategory = "All";
        _loading = false;
    }

    async Task DeleteRow(EventForListViewDto eventForDelete, DialogService ds)
    {
        _loading = true;
        await EventRepo.DeleteEvent(eventForDelete);
        _loading = false;
        ds.Close(true);
    }

    async Task Refresh(bool refresh = false)
    {
        _loading = true;
        _events = await State.GetEventList(refresh);
        _loading = false;
    }

    async Task ShowConfirmDialogue(EventForListViewDto eventForDelete) => await Dialog.OpenAsync("Alert", ds =>
        @<RadzenCard Style="padding: 20px;">
            <p Style="margin-bottom: 10px;">Are you sure you want to delete?</p>
            <div class="row">
                <div class="col-md-12">
                    <RadzenButton Text="Ok" Click="async () => await DeleteRow(eventForDelete, ds)" Style="margin-bottom: 10px; width: 150px"/>
                    <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Style="margin-bottom: 10px; width: 150px"/>
                </div>
            </div>
        </RadzenCard>);

}