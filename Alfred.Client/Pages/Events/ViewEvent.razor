@page "/Events/{Id:int}"
@using Alfred.Client.Dtos.Events
@using Alfred.Client.Pages.Events.Components
@inject IEventRepository EventRepo

<AuthorizedView Role=@($"{Roles.Admin},{Roles.Core},{Roles.Editor},{Roles.Staff}")>
    <RadzenCard Style="margin-bottom: 20px;">
        <div class="row">
            <div class="col-md-3 mb-2">
                <a href=@($"/Events/")>
                    <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="navigate_before" Text="Back"/>
                </a>
            </div>
            <div class="col-md-9 mb-2 text-right">
                
                    <a href=@($"/Events/Edit/{_event.Id}")>
                        <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="edit" Text="Edit"/>
                    </a>
                @if (_event.NeedRegistration ?? false)
                {
                    <a href=@($"/Events/{_event.Id}/Registrations")>
                        <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="assignment_turned_in" Text="Registrations"/>
                    </a>
                }

                    <a href=@($"/Events/{_event.Id}/Results")>
                        <RadzenButton ButtonStyle="ButtonStyle.Primary" Icon="emoji_events" Text="Results"/>
                    </a>
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                <ViewEventInfo Event="@_event"/>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-12">
                        <ViewMoreDetails Event="@_event"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <ViewSchedule Event="@_event"/>
                    </div>
                </div>
            </div>
        </div>

    </RadzenCard>

    @if (_loading)
    {
        <div class="spinner"></div>
    }
</AuthorizedView>

@code{

    [Parameter]
    public int Id { get; set; }

    bool _loading = false;
    EventForDetailedViewDto _event = new EventForDetailedViewDto();

    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        _event = await EventRepo.GetEvent(Id);
        _loading = false;
    }

}